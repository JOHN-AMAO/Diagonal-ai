// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your projectless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model Profile {
    id           String       @id @default(uuid())
    userId       String       @unique
    name         String
    imageUrl     String       @db.Text
    email        String       @db.Text
    project      Project[]
    members      Member[]
    channels     Channel[]
    createdAt    DateTime     @default(now())
    updatedAt    DateTime     @updatedAt

}

model Project {
    id        String     @id @default(uuid())
    name      String
    imageUrl  String     @db.Text
    inviteCode String    @unique
    profileId String
    profile   Profile    @relation(fields: [profileId], references: [id], onDelete: Cascade)
    members   Member[]
    channels  Channel[]

    createdAt DateTime   @default(now())
    updatedAt DateTime   @updatedAt

    @@index([profileId])
}
model Task {
    id            String        @id @default(uuid())
    description   String
    fromDate      DateTime
    toDate        DateTime
    collaborators Collaborator[]
    duration      Int
    status        TaskStatus    @default(TODO)
    projectId     String
    
}

model Collaborator {
    id       String   @id @default(uuid())
    name     String
    task     Task[]   

}

enum TaskStatus {
  TODO
  IN_PROGRESS
  DONE
}




enum MemberRole {
  ADMIN
  GUEST
  MEMBER
  MODERATOR
}

model Member {
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  projectId String
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  messages Message[]
  directMessages DirectMessage[]

  conversationsInitiated Conversation[] @relation("MemberOne")
  conversationsReceived Conversation[] @relation("MemberTwo")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([projectId])
}

enum ChannelType {
  TEXT
  AUDIO
  VIDEO
}

model Channel {
  id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  projectId String
  project Project @relation(fields: [projectId], references: [id], onDelete: Cascade)

  messages Message[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([projectId])
}

model Message {
  id String @id @default(uuid())
  content String @db.Text

  fileUrl String? @db.Text

  memberId String
  member Member @relation(fields: [memberId], references: [id], onDelete: Cascade)

  channelId String
  channel Channel @relation(fields: [channelId], references: [id], onDelete: Cascade)

  deleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([channelId])
  @@index([memberId])
}

model Conversation {
  id String @id @default(uuid())

  memberOneId String
  memberOne Member @relation("MemberOne", fields: [memberOneId], references: [id], onDelete: Cascade)

  memberTwoId String
  memberTwo Member @relation("MemberTwo", fields: [memberTwoId], references: [id], onDelete: Cascade)

  directMessages DirectMessage[]

  @@index([memberTwoId])

  @@unique([memberOneId, memberTwoId])
}

model DirectMessage {
  id String @id @default(uuid())
  content String @db.Text
  fileUrl String? @db.Text

  memberId String
  member Member @relation(fields: [memberId], references: [id], onDelete: Cascade)

  conversationId String
  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  deleted Boolean @default(false)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([memberId])
  @@index([conversationId])
}